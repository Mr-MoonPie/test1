// Parameters
Boolean SENDDEPLOYMENTEMAIL = false;
String TRAIL_NAME ='EBike';
String MODULE_NAME = 'Module05'; // e.g. Module01
String DEPLOYMENTNAME = TRAIL_NAME+' '+MODULE_NAME+'';
String COMMIT_ID = '';
String COMMIT_NAME = '';
String BRANCH_NAME = 'Module05-CopadoOrg';
String GITREPOSITORY_NAME = 'E-Bike Copado Trail';
Boolean SEED_METADATA = true;
Boolean SEED_DATA = true; 
String DESTINATION_ORG_NAME ='Copado'; // Options: Dev1, Dev2, UAT, Production, Hotfix, Copado

//[{"t":"ApexClass","n":"AccountOperations","s":true}]
String STEPDATA_GITMETADATA = '[{"t":"Layout","n":"copado__User_Story__c-copado__User Story Layout","s":true},{"t":"Layout","n":"copado__Project__c-copado__Project Layout","s":true},{"t":"Layout","n":"copado__Org__c-copado__Org Layout","s":true},{"t":"Layout","n":"copado__Environment__c-copado__Environment Layout","s":true},{"t":"Layout","n":"copado__Deployment_Flow_Step__c-copado__Deployment Flow Step Layout","s":true},{"t":"Layout","n":"copado__Deployment_Flow__c-copado__Deployment Flow Layout","s":true},{"t":"Profile","n":"Admin","s":true}';
String STEPDATA_APEX = '';

private static void checkTrailRepoExists() {
	if([select Id from copado__Git_Repository__c where Name=:GITREPOSITORY_NAME].size()==0){
		copado__Git_Repository__c repo = new copado__Git_Repository__c(Name=GITREPOSITORY_NAME);
		repo.copado__URI__c = 'TBC';
		insert repo;	
	}
}

private static copado__Deployment__c insertDeployment() {
	copado__Deployment__c x = new copado__Deployment__c();
	x.Name = DEPLOYMENTNAME;
	x.copado__Send_Deployment_Complete_email__c = SENDDEPLOYMENTEMAIL;
	insert x;
	insertDestinationOrg(x.Id);
	return x;
}
private static void insertDestinationOrg(Id dId) {
	copado__Destination_Org__c x = new copado__Destination_Org__c();
	x.copado__Deployment__c = dId;
	x.copado__To_Org__c = [select Id from copado__Org__c where copado__Environment__r.Name=:DESTINATION_ORG_NAME limit 1].Id;
	insert x;
}

private static copado__Step__c setGitStepValues(copado__Step__c x) {
	x.copado__Branch__c = BRANCH_NAME;
	x.copado__Commit_Id__c = COMMIT_ID;
	x.copado__Commit_Name__c = COMMIT_NAME;
	x.copado__Git_Repository__c = [select Id from copado__Git_Repository__c where Name=:GITREPOSITORY_NAME Limit 1].Id;
	x.copado__DataJson__c = '{"testLevel":"NoTestRun","replacements":[]}';
	return x;
}
private static copado__Step__c createDeploymentStep(Id dId, Integer iorder, String stepType, String stepName) {
	copado__Step__c x = new copado__Step__c();
	x.Name = stepName;
	x.copado__Deployment__c = dId;
	x.copado__Order__c = iorder;
	x.copado__Type__c = stepType;
	x.copado__CheckOnly__c = false;
	if(stepType=='Git MetaData') x = setGitStepValues(x);
	return x;
}

private static void updateStep(copado__Step__c step, Id attachmentId) {
	step.copado__Attachment_Id__c = attachmentId;
	update step;
}
private static Attachment insertAttachment(Id parentId, String name, String b) {
	Attachment x = new Attachment(ParentId=parentId, Name=name, body=Blob.valueOf(b));
	insert x;
	return x;
}
 
private static String createCacheRefreshString(String recordId, String apiKey) {
	String s = '{"type":"wait","method":"POST","url":"https://copado.herokuapp.com/json/v1/webhook/metadata/'+recordId+'?api_key='+apiKey+'","body":"","queryParameters":[["api_key","'+apiKey+'"]],"headers":[]}';
	return s;
}


//Execute Apex anonymous code DO NOT MODIFY THE BELOW CODE
//checkTrailRepoExists();
copado__Deployment__c depl = insertDeployment();

if(SEED_METADATA) {
	copado__Step__c step1 = createDeploymentStep(depl.Id, 1, 'Git MetaData', MODULE_NAME+' Metadata');
	insert step1;
	Attachment step1att = insertAttachment(step1.Id, 'MetaData', STEPDATA_GITMETADATA);
	updateStep(step1, step1att.Id);

	Id recordId = [select Id from copado__Org__c where Name=:DESTINATION_ORG_NAME limit 1].Id;
	User u = [select Id, Division from User where Id=:UserInfo.getUserId() limit 1];
	String cacheRefreshString = createCacheRefreshString(recordId, u.Division);
	copado__Step__c cacheRefresh = createDeploymentStep(depl.Id, 2, 'URL Callout', 'Cache refresh');
	cacheRefresh.copado__DataJson__c = cacheRefreshString;
	insert cacheRefresh;
}
if(SEED_DATA) {
	copado__Step__c step2 = createDeploymentStep(depl.Id, 3, 'Apex', MODULE_NAME+' data');
	insert step2;
	Attachment step2att = insertAttachment(step2.Id, 'Apex', STEPDATA_APEX);
}
